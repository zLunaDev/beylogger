generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  username  String?
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  collection UserCollection[]
  combos    Combo[]
}

model Blade {
  id   Int      @id @default(autoincrement())
  name String

  images     BladeImage[]
  beyblades   Beyblade[]
  combos      Combo[]
}

model Ratchet {
  id   Int      @id @default(autoincrement())
  name String

  images     RatchetImage[]
  beyblades   Beyblade[]
  combos      Combo[]
}

model Bit {
  id   Int      @id @default(autoincrement())
  name String

  images     BitImage[]
  beyblades   Beyblade[]
  combos      Combo[]
}

model BladeImage {
  id     Int   @id @default(autoincrement())
  blade  Blade @relation(fields: [bladeId], references: [id])
  bladeId Int
  image  Bytes
}

model RatchetImage {
  id     Int   @id @default(autoincrement())
  ratchet  Ratchet @relation(fields: [ratchetId], references: [id])
  ratchetId Int
  image  Bytes
}

model BitImage {
  id     Int   @id @default(autoincrement())
  bit  Bit @relation(fields: [bitId], references: [id])
  bitId Int
  image  Bytes
}

model Beyblade {
  id          Int      @id @default(autoincrement())
  attack      Int
  stamina     Int
  defesa      Int
  equilibrio  Int
  blade       Blade    @relation(fields: [bladeId], references: [id])
  bladeId     Int
  ratchet     Ratchet  @relation(fields: [ratchetId], references: [id])
  ratchetId   Int
  bit         Bit      @relation(fields: [bitId], references: [id])
  bitId       Int
  createdAt   DateTime @default(now())
  collections UserCollection[]
}

model UserCollection {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  beyblade  Beyblade @relation(fields: [beybladeId], references: [id])
  beybladeId Int
  createdAt DateTime @default(now())

  @@unique([userId, beybladeId])
}

model Combo {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  blade     Blade    @relation(fields: [bladeId], references: [id])
  bladeId   Int
  ratchet   Ratchet  @relation(fields: [ratchetId], references: [id])
  ratchetId Int
  bit       Bit      @relation(fields: [bitId], references: [id])
  bitId     Int
  likes     Int      @default(0)
  createdAt DateTime @default(now())
}

model ComboLike {
  id        Int      @id @default(autoincrement())
  comboId   Int
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([comboId, userId])
  @@index([comboId])
  @@index([userId])
}
